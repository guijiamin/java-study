<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.study</groupId>
    <artifactId>network-program</artifactId>
    <version>1.0-SNAPSHOT</version>

    <dependencies>
        <!-- https://mvnrepository.com/artifact/com.google.protobuf/protobuf-java -->
        <dependency>
            <groupId>com.google.protobuf</groupId>
            <artifactId>protobuf-java</artifactId>
            <version>3.7.1</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/junit/junit -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.13.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>1.2.41</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/io.netty/netty-all -->
        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-all</artifactId>
            <version>4.1.6.Final</version>
        </dependency>
        <dependency>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
            <version>1.1.3</version>
        </dependency>
</dependencies>

<build>
<resources>
<resource>
    <directory>src/main/resources</directory>
</resource>
</resources>
<pluginManagement>
<plugins>
    <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
            <source>1.8</source>
            <target>1.8</target>
        </configuration>
    </plugin>
</plugins>
</pluginManagement>
<plugins>
<plugin>
    <groupId>org.codehaus.mojo</groupId>
    <artifactId>appassembler-maven-plugin</artifactId>
    <version>1.2.1</version>
    <executions>
        <execution>
            <id>make-assembly</id>
            <phase>package</phase>
            <goals>
                <goal>assemble</goal>
            </goals>
        </execution>
    </executions>

    <configuration>
        <!--生成windows,unix两种平台执行脚本-->
                    <platforms>
                        <platform>windows</platform>
                        <platform>unix</platform>
                    </platforms>
                    <!--生成的项目的目录位置，你可以根据你的需要自己随便命名-->
                    <assembleDirectory>${project.build.directory}/${project.name}</assembleDirectory>
                    <!--打包的jar以及mvn依赖的jar放到这个目录下-->
                    <repositoryName>lib</repositoryName>
                    <!--可执行脚本的目录-->
                    <binFolder>bin</binFolder>
                    <binFileExtensions>
                        <unix>.sh</unix>
                    </binFileExtensions>
                    <!--配置文件的目录-->
                    <configurationDirectory>conf</configurationDirectory>
                    <!--lib目录中jar的存放规则，默认是${groupId}/${artifactId}的目录格式，flat表示直接把jar放到lib目录下-->
                    <repositoryLayout>flat</repositoryLayout>

                    <configurationSourceDirectory>src/main/resources</configurationSourceDirectory>
                    <copyConfigurationDirectory>true</copyConfigurationDirectory>
                    <includeConfigurationDirectoryInClasspath>true</includeConfigurationDirectoryInClasspath>

                    <programs>
                        <program>
                            <!--启动类-->
                            <mainClass>com.study.networkprogram.io.TcpServer</mainClass>
                            <jvmSettings>
                                <extraArguments>
                                    <extraArgument>-server</extraArgument>
                                    <extraArgument>-Xmx256M</extraArgument>
                                    <extraArgument>-Xms256M</extraArgument>
                                </extraArguments>
                            </jvmSettings>
                            <!--生成的脚本文件的名称，比如start.sh-->
                            <name>TcpServer</name>
                        </program>
                        <program>
                            <!--启动类-->
                            <mainClass>com.study.networkprogram.io.TcpClient</mainClass>
                            <jvmSettings>
                                <extraArguments>
                                    <extraArgument>-server</extraArgument>
                                    <extraArgument>-Xmx256M</extraArgument>
                                    <extraArgument>-Xms256M</extraArgument>
                                </extraArguments>
                            </jvmSettings>
                            <!--生成的脚本文件的名称，比如start.sh-->
                            <name>TcpClient</name>
                        </program>
                    </programs>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>